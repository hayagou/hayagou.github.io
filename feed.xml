<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://hayagou.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hayagou.github.io/" rel="alternate" type="text/html" /><updated>2020-02-11T19:00:56+09:00</updated><id>https://hayagou.github.io/feed.xml</id><title type="html">Hayagou</title><author><name>hayagou</name></author><entry><title type="html">UML과 클래스 다이어그램</title><link href="https://hayagou.github.io/2019/10/30/uml.html" rel="alternate" type="text/html" title="UML과 클래스 다이어그램" /><published>2019-10-30T12:45:13+09:00</published><updated>2019-10-30T12:45:13+09:00</updated><id>https://hayagou.github.io/2019/10/30/uml</id><content type="html" xml:base="https://hayagou.github.io/2019/10/30/uml.html">&lt;h1 id=&quot;디자인패턴-uml&quot;&gt;[디자인패턴] UML&lt;/h1&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;UML의 구성 요소&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;사물(Things)&lt;/strong&gt; : 기본 요소&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;관계(Relationship)&lt;/strong&gt; : 사물 간의 관계&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;다이어그램(Diagram)&lt;/strong&gt; : 사물관 관계를 도형으로 표현
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;사물things&quot;&gt;사물(Things)&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;사물은 추상적 개념으로서 모델에서 가장 중요&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;구조사물 : 시스템의 구조를 표현하는 사물&lt;/li&gt;
  &lt;li&gt;해동사물 : 시스템의 행위를 표현하는 사물&lt;/li&gt;
  &lt;li&gt;그룹사물 : 개념을 그룹화하는 사물&lt;/li&gt;
  &lt;li&gt;주해사물 : 부가적으로 개념을 설명하는 사물
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;관계&quot;&gt;관계&lt;/h2&gt;
&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;요소가 서로 연관되는 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;table-responsive table-bordered table-condensed&quot;&gt;
	&lt;table class=&quot;table&quot;&gt;
		&lt;tr class=&quot;text-center&quot;&gt;
			&lt;th&gt;관계&lt;/th&gt;
			&lt;th&gt;표시&lt;/th&gt;
			&lt;th&gt;설명&lt;/th&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;연관관계(association)&lt;/td&gt;
			&lt;td&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;/img/posts/uml/association.png&quot; alt=&quot;association&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;두 사물간의 의미적  관계, 하나의 요소의 변화는 다른 하나에 영향을 미치는 두가지 사이의 관계&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;일반화  관계(generalization)&lt;/td&gt;
			&lt;td&gt;&lt;img src=&quot;/img/posts/uml/generalization.png&quot; alt=&quot;generalization&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;클래스와 인터페이스 사이에서 상속관계를 설명&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;집약관계(aggregation)&lt;/td&gt;
			&lt;td&gt;&lt;img src=&quot;/img/posts/uml/aggregation.png&quot; alt=&quot;aggregation&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;라이프  타임은  독립적전체, 객체가 없어져도 부분 객체는  없어지지않는다&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;합성  관계(composition)&lt;/td&gt;
			&lt;td&gt;&lt;img src=&quot;/img/posts/uml/composition.png&quot; alt=&quot;composition&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;라이프  타임은  의존적, 전체  객체가  없어지면  부분객체도  없어진다.&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;의존관계(dependency)&lt;/td&gt;
			&lt;td&gt;&lt;img src=&quot;/img/posts/uml/dependency.png&quot; alt=&quot;dependency&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;연관  관계와  같음, 차이점은  두  클래스의  관계가  한  메서드를  실행하는  동안과  같은, 매우  짧은  시간만  유지된다는  점이다.&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
			&lt;td&gt;실체화  관계(realization)&lt;/td&gt;
			&lt;td&gt;&lt;img src=&quot;/img/posts/uml/realization.png&quot; alt=&quot;realization&quot; width=&quot;200&quot; height=&quot;110&quot; /&gt;&lt;/td&gt;
			&lt;td&gt;인터페이스와  클래스  컴포넌트  사이의  관계를  지정&lt;/td&gt;
		&lt;/tr&gt;
	&lt;/table&gt;
&lt;/div&gt;

&lt;!-- | 관계 |표시 |설명|
|--|--|--|
| 연관관계(association) |  &lt;img data-action=&quot;zoom&quot; src='/img/posts/uml/association.png' alt='association' width=&quot;200&quot; height=&quot;110&quot;&gt;|두 사물간의 의미적  관계, 하나의 요소의 변화는 다른 하나에 영향을 미치는 두가지 사이의 관계 |
|일반화  관계(generalization)  | &lt;img src=&quot;/img/posts/uml/generalization.png&quot; alt='generalization' width=&quot;200&quot; height=&quot;110&quot;&gt; |클래스와 인터페이스 사이에서 상속관계를 설명 |
|집약관계(aggregation)|&lt;img src=&quot;/img/posts/uml/aggregation.png&quot; alt='aggregation' width=&quot;200&quot; height=&quot;110&quot;&gt;|라이프  타임은  독립적전체, 객체가 없어져도 부분 객체는  없어지지않는다|
|합성  관계(composition)|&lt;img src=&quot;/img/posts/uml/composition.png&quot; alt='composition' width=&quot;200&quot; height=&quot;110&quot;&gt;|라이프  타임은  의존적, 전체  객체가  없어지면  부분객체도  없어진다.|
|의존관계(dependency)|&lt;img src=&quot;/img/posts/uml/dependency.png&quot; alt='dependency' width=&quot;200&quot; height=&quot;110&quot;&gt;|연관  관계와  같음, 차이점은  두  클래스의  관계가  한  메서드를  실행하는  동안과  같은, 매우  짧은  시간만  유지된다는  점이다.|
|실체화  관계(realization)|&lt;img src=&quot;/img/posts/uml/realization.png&quot; alt='realization' width=&quot;200&quot; height=&quot;110&quot;&gt;|인터페이스와  클래스  컴포넌트  사이의  관계를  지정| --&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>hayagou</name></author><summary type="html">[디자인패턴] UML</summary></entry><entry><title type="html">Grid Option</title><link href="https://hayagou.github.io/2019/10/30/grid_optoin.html" rel="alternate" type="text/html" title="Grid Option" /><published>2019-10-30T08:45:13+09:00</published><updated>2019-10-30T08:45:13+09:00</updated><id>https://hayagou.github.io/2019/10/30/grid_optoin</id><content type="html" xml:base="https://hayagou.github.io/2019/10/30/grid_optoin.html">&lt;h1 id=&quot;부트스트랩-grid-options--offset-nesting-ordering&quot;&gt;[부트스트랩] Grid options : offset, nesting, ordering&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;디바이스 사이즈&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;xs : 스마트폰 사이즈&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sm : 태블릿 사이즈&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;md : 데스크탑 사이즈&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;lg : 큰 모니터 사이즈&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;offset&quot;&gt;offset&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
col-*-offset-*

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;요소를 옮기고 싶을때 사용&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;nesting&quot;&gt;nesting&lt;/h2&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
.container
    .row
	 .col-md-*
		row               //row가 두개 이상들어갈수 있다.
			.col-md-*
			.col-md-*
		row
			.col-md-*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;요소들을 묶을때 사용, 중첩 구문&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ordering&quot;&gt;ordering&lt;/h2&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
col-*-push-*  //오른쪽으로 밀어냄

col-*-pull-*  //왼쪽으로 밀어냄

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;요소들의 순서를 바꾸어 줌&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>hayagou</name></author><summary type="html">[부트스트랩] Grid options : offset, nesting, ordering</summary></entry><entry><title type="html">Button</title><link href="https://hayagou.github.io/2019/10/30/button.html" rel="alternate" type="text/html" title="Button" /><published>2019-10-30T08:45:13+09:00</published><updated>2019-10-30T08:45:13+09:00</updated><id>https://hayagou.github.io/2019/10/30/button</id><content type="html" xml:base="https://hayagou.github.io/2019/10/30/button.html">&lt;p&gt;#[부트스트랩] 버튼 스타일&lt;/p&gt;</content><author><name>hayagou</name></author><summary type="html">#[부트스트랩] 버튼 스타일</summary></entry><entry><title type="html">Image</title><link href="https://hayagou.github.io/2019/10/30/img.html" rel="alternate" type="text/html" title="Image" /><published>2019-10-30T08:45:13+09:00</published><updated>2019-10-30T08:45:13+09:00</updated><id>https://hayagou.github.io/2019/10/30/img</id><content type="html" xml:base="https://hayagou.github.io/2019/10/30/img.html">&lt;p&gt;#[부트스트랩] 이미지 스타일&lt;/p&gt;</content><author><name>hayagou</name></author><summary type="html">#[부트스트랩] 이미지 스타일</summary></entry><entry><title type="html">Table and Form</title><link href="https://hayagou.github.io/2011/01/02/table_form.html" rel="alternate" type="text/html" title="Table and Form" /><published>2011-01-02T08:45:13+09:00</published><updated>2011-01-02T08:45:13+09:00</updated><id>https://hayagou.github.io/2011/01/02/table_form</id><content type="html" xml:base="https://hayagou.github.io/2011/01/02/table_form.html">&lt;h1 id=&quot;부트스트랩-테이블과-폼-태그-스타일&quot;&gt;[부트스트랩] 테이블과 폼 태그 스타일&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tr 	//table row, 가로 
td 	//table data, 세로
th 	//table header
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그리드 레이아웃의 row 를 그대로 적용해서 네이밍 한것
“td” 가 table col이 아니고 table data인 이유는 데이터가 들어가는 부분이라서&lt;/p&gt;

&lt;h2 id=&quot;table-class들&quot;&gt;Table Class들&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table class=&quot;table&quot;&amp;gt;
  ...
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;table.table&lt;/strong&gt; : 약간의 패딩과 수평 구분선&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;table.table-striped&lt;/strong&gt; : 줄무늬 행&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;table.table-striped&lt;/strong&gt; : 선있는 테이블&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;table.table-hover&lt;/strong&gt; : 행 hover, 마우스올리면 불들어옴&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;table.table-condensed&lt;/strong&gt; : 좁은폭 테이블&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;table-row에-효과를-넣고-싶을&quot;&gt;Table Row에 효과를 넣고 싶을&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;table-responsive&quot;&gt;
    &lt;table class=&quot;table table-bordered table-striped&quot;&gt;
      &lt;colgroup&gt;
        &lt;col class=&quot;col-xs-1&quot; /&gt;
        &lt;col class=&quot;col-xs-7&quot; /&gt;
      &lt;/colgroup&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;클래스&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;
            &lt;code&gt;.active&lt;/code&gt;
          &lt;/th&gt;
          &lt;td&gt;특정한 행이나 셀에 hover 했을 때와 같은 색을 입힙니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;
            &lt;code&gt;.success&lt;/code&gt;
          &lt;/th&gt;
          &lt;td&gt;성공적이거나 긍정적인 액션을 의미합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;
            &lt;code&gt;.info&lt;/code&gt;
          &lt;/th&gt;
          &lt;td&gt;중립적인 정보의 변화나 액션을 의미합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;
            &lt;code&gt;.warning&lt;/code&gt;
          &lt;/th&gt;
          &lt;td&gt;주의가 필요한 경고를 의미합니다.&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;
            &lt;code&gt;.danger&lt;/code&gt;
          &lt;/th&gt;
          &lt;td&gt;위험하거나 부정적일수 있는 액션을 의미합니다. &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!-- On rows --&amp;gt;
&amp;lt;tr class=&quot;active&quot;&amp;gt;...&amp;lt;/tr&amp;gt;
&amp;lt;tr class=&quot;success&quot;&amp;gt;...&amp;lt;/tr&amp;gt;
&amp;lt;tr class=&quot;warning&quot;&amp;gt;...&amp;lt;/tr&amp;gt;
&amp;lt;tr class=&quot;danger&quot;&amp;gt;...&amp;lt;/tr&amp;gt;
&amp;lt;tr class=&quot;info&quot;&amp;gt;...&amp;lt;/tr&amp;gt;

&amp;lt;!-- On cells (`td` or `th`) --&amp;gt;
&amp;lt;tr&amp;gt;
  &amp;lt;td class=&quot;active&quot;&amp;gt;...&amp;lt;/td&amp;gt;
  &amp;lt;td class=&quot;success&quot;&amp;gt;...&amp;lt;/td&amp;gt;
  &amp;lt;td class=&quot;warning&quot;&amp;gt;...&amp;lt;/td&amp;gt;
  &amp;lt;td class=&quot;danger&quot;&amp;gt;...&amp;lt;/td&amp;gt;
  &amp;lt;td class=&quot;info&quot;&amp;gt;...&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;폼태그-스타일&quot;&gt;폼태그 스타일&lt;/h2&gt;
&lt;hr /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;form.form-inline
	div.form-group.has-success.has-feedback
		div.input-group
			span.input-group-addon
				span.glyphicon glyphicon-*(들어가 이미지 명)
			input.form-control
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;form-inline&lt;/strong&gt; : 폼의 요소들을 한줄로 정
&lt;strong&gt;form-horizontal&lt;/strong&gt; : 폼의 요소들을 수평으로 정렬
&lt;strong&gt;form-group&lt;/strong&gt; : form태그 안의 최적의 여백을 위해
&lt;strong&gt;input-control&lt;/strong&gt; : 조작하고싶은 요소
&lt;strong&gt;control-label&lt;/strong&gt; : 레이블테그가 form-group이 가지고있는 스타일을 따라
&lt;strong&gt;has-스타일이름&lt;/strong&gt; : 입력창에 스타일을 줌
&lt;strong&gt;input-group&lt;/strong&gt; : 인풋 테그 스타일을 줌
&lt;strong&gt;input-group-addon&lt;/strong&gt; : 인풋 태그에 보조아이콘 추가&lt;/p&gt;</content><author><name>hayagou</name></author><summary type="html">[부트스트랩] 테이블과 폼 태그 스타일</summary></entry></feed>